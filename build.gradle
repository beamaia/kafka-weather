plugins {
    id 'java'
    id 'application'
}

ext {
   javaMainClass = "kafkaWeather.MainClass"
}

repositories {
    mavenCentral()


    maven {
        url "https://packages.confluent.io/maven"
    }
}


dependencies {
    // Kafka dependencies
    implementation "org.slf4j:slf4j-simple:2.0.7"
    implementation 'org.apache.kafka:kafka-streams:3.4.0'
    implementation 'org.apache.kafka:connect-json:3.4.0'

    // logging log4j
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    implementation ('org.apache.kafka:kafka-clients') {
       version {
           strictly '3.4.0'
        }
      }
    // Add other dependencies as needed
}

// tasks.withType(JavaExec) {
//     maxParallelForks = Runtime.runtime.availableProcessors() // Run tasks in parallel using available processors
// }


logging.captureStandardOutput LogLevel.ERROR


task runBeachHour(type: JavaExec) {
    main = 'kafkaWeather.BeachHour' // Replace with the fully qualified name of your class
    classpath = sourceSets.main.runtimeClasspath
}

task runBeachHourFiltered(type: JavaExec) {
    main = 'kafkaWeather.BeachHourFiltered' // Replace with the fully qualified name of your class
    classpath = sourceSets.main.runtimeClasspath
}

task runSunHour(type: JavaExec) {
    main = 'kafkaWeather.SunHour' // Replace with the fully qualified name of your class
    classpath = sourceSets.main.runtimeClasspath
}

task runBeachDayGrouped(type: JavaExec) {
    main = 'kafkaWeather.BeachDayGrouped' // Replace with the fully qualified name of your class
    classpath = sourceSets.main.runtimeClasspath
}

task runBeachDay(type: JavaExec) {
    main = 'kafkaWeather.BeachDay' // Replace with the fully qualified name of your class
    classpath = sourceSets.main.runtimeClasspath
}


application {
    mainClassName = javaMainClass
}