version: "2"

networks:
  default:
    name: mynet
    driver: bridge

services:
    zookeeper:
        build: 
            context: .
        container_name: zookeeper
        command: sh -c '/kafka/bin/zookeeper-server-start.sh /kafka/config/zookeeper.properties'
        ports:
            - 2181:2181

    kafka:
        build: 
            context: .
        container_name: kafka
        command: sh -c '/kafka/bin/kafka-server-start.sh /kafka/config/server.properties --override zookeeper.connect=zookeeper:2181 --override log.retention.minutes=59 --override log.retention.check.interval.ms=300000'
        ports:
            - 9092:9092

    topics:
        build: 
            context: .
        container_name: topics
        command: sh -c 'sleep 10s && sh ./create_topics.sh'
        depends_on:
            - zookeeper
            - kafka

    development:
        build: 
            context: .
        container_name: dev
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        volumes:
            - .:/app
        ports:
            - 8000:8000
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 10s && uvicorn main:app --reload --host 0.0.0.0 --port 8000"

    ########################################################################
    # Producers
    weather:
        build: 
            context: .
        container_name: weather
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && python3 producers/weather_producer.py"

    sunsetsunrise:
        build: 
            context: .
        container_name: sunsetsunrise
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && python3 producers/sunset_sunrise_producer.py"
    
    uv:
        build: 
            context: .
        container_name: uv
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && python3 producers/uv_producer.py"

    ########################################################################
    # Consumer producers
    sunhour:
        build: 
            context: .
        container_name: sunhour
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && gradle runSunHour"

    beachhourfiltered:
        build: 
            context: .
        container_name: beachhourfiltered
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && gradle runBeachHourFiltered"

    beachhour:
        build: 
            context: .
        container_name: beachhour
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && gradle runBeachHour"

    beachdaygrouped:
        build: 
            context: .
        container_name: beachdaygrouped
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && gradle runBeachDayGrouped"

    beachday:
        build: 
            context: .
        container_name: beachday
        tty: true
        depends_on:
            - zookeeper
            - kafka
            - topics
        environment:
            - KAFKA_SERVER=kafka
        command: sh -c "sleep 60s && gradle runBeachDay"
    

